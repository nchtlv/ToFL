(set-logic QF_NIA)
(define-fun arcMax ((x1 Int) (x2 Int)) Int (ite (> x1 x2) x1 x2))
(define-fun arcSum ((x1 Int) (x2 Int)) Int (ite (= x1 -1) x1 (ite (= x2 -1) x2 (+ x1 x2))))
(define-fun >> ((a Int) (b Int)) Bool (or (> a b) (and (= a -1) (= b -1))))
(declare-fun ah1 () Int)
(declare-fun ah2 () Int)
(declare-fun ah3 () Int)
(declare-fun ah4 () Int)
(declare-fun bh1 () Int)
(declare-fun bh2 () Int)
(declare-fun as1 () Int)
(declare-fun as2 () Int)
(declare-fun as3 () Int)
(declare-fun as4 () Int)
(declare-fun bs1 () Int)
(declare-fun bs2 () Int)
(declare-fun ag1 () Int)
(declare-fun ag2 () Int)
(declare-fun ag3 () Int)
(declare-fun ag4 () Int)
(declare-fun bg1 () Int)
(declare-fun bg2 () Int)
(declare-fun af1 () Int)
(declare-fun af2 () Int)
(declare-fun af3 () Int)
(declare-fun af4 () Int)
(declare-fun bf1 () Int)
(declare-fun bf2 () Int)
(assert (>> (arcMax (arcSum af1 (arcMax (arcSum ag1 as1) (arcSum ag2 as3))) (arcSum af2 (arcMax (arcSum ag3 as1) (arcSum ag4 as3)))) (arcMax (arcSum ah1 as1) (arcSum ah2 as3))))
(assert (>> (arcMax (arcSum af1 (arcMax (arcSum ag1 as2) (arcSum ag2 as4))) (arcSum af2 (arcMax (arcSum ag3 as2) (arcSum ag4 as4)))) (arcMax (arcSum ah1 as2) (arcSum ah2 as4))))
(assert (>> (arcMax (arcSum af3 (arcMax (arcSum ag1 as1) (arcSum ag2 as3))) (arcSum af4 (arcMax (arcSum ag3 as1) (arcSum ag4 as3)))) (arcMax (arcSum ah3 as1) (arcSum ah4 as3))))
(assert (>> (arcMax (arcSum af3 (arcMax (arcSum ag1 as2) (arcSum ag2 as4))) (arcSum af4 (arcMax (arcSum ag3 as2) (arcSum ag4 as4)))) (arcMax (arcSum ah3 as2) (arcSum ah4 as4))))
(assert (>> (arcMax (arcMax (arcSum af1 (arcMax (arcMax (arcSum ag1 bs1) (arcSum ag2 bs2)) bg1)) (arcSum af2 (arcMax (arcMax (arcSum ag3 bs1) (arcSum ag4 bs2)) bg2))) bf1) (arcMax (arcMax (arcSum ah1 bs1) (arcSum ah2 bs2)) bh1)))
(assert (>> (arcMax (arcMax (arcSum af3 (arcMax (arcMax (arcSum ag1 bs1) (arcSum ag2 bs2)) bg1)) (arcSum af4 (arcMax (arcMax (arcSum ag3 bs1) (arcSum ag4 bs2)) bg2))) bf2) (arcMax (arcMax (arcSum ah3 bs1) (arcSum ah4 bs2)) bh2)))
(assert (>> ah1 as1))
(assert (>> ah2 as2))
(assert (>> ah3 as3))
(assert (>> ah4 as4))
(assert (>> bh1 bs1))
(assert (>> bh2 bs2))
(assert (>> ag1 af1))
(assert (>> ag2 af2))
(assert (>> ag3 af3))
(assert (>> ag4 af4))
(assert (>> bg1 bf1))
(assert (>> bg2 bf2))
(assert (>= ah1 0))
(assert (or (>= ah2 0) (= ah2 -1)))
(assert (or (>= ah3 0) (= ah3 -1)))
(assert (or (>= ah4 0) (= ah4 -1)))
(assert (>= bh1 0))
(assert (or (>= bh2 0) (= bh2 -1)))
(assert (>= as1 0))
(assert (or (>= as2 0) (= as2 -1)))
(assert (or (>= as3 0) (= as3 -1)))
(assert (or (>= as4 0) (= as4 -1)))
(assert (>= bs1 0))
(assert (or (>= bs2 0) (= bs2 -1)))
(assert (>= ag1 0))
(assert (or (>= ag2 0) (= ag2 -1)))
(assert (or (>= ag3 0) (= ag3 -1)))
(assert (or (>= ag4 0) (= ag4 -1)))
(assert (>= bg1 0))
(assert (or (>= bg2 0) (= bg2 -1)))
(assert (>= af1 0))
(assert (or (>= af2 0) (= af2 -1)))
(assert (or (>= af3 0) (= af3 -1)))
(assert (or (>= af4 0) (= af4 -1)))
(assert (>= bf1 0))
(assert (or (>= bf2 0) (= bf2 -1)))
(check-sat)
(get-model)
